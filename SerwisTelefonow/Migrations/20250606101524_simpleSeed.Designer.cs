// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SerwisTelefonow.Data;

#nullable disable

namespace SerwisTelefonow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606101524_simpleSeed")]
    partial class simpleSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SerwisTelefonow.DBModels.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("imie");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nazwisko");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.ToTable("klient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Adrian",
                            Nazwisko = "Kowalczyk",
                            Telefon = "123123123"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Kondrat",
                            Nazwisko = "Kwaśniak",
                            Telefon = "415617154"
                        },
                        new
                        {
                            Id = 3,
                            Imie = "Karol",
                            Nazwisko = "Marek",
                            Telefon = "918472948"
                        });
                });

            modelBuilder.Entity("SerwisTelefonow.DBModels.PhoneModel", b =>
                {
                    b.Property<string>("KodModelu")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kod_modelu");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("marka");

                    b.Property<string>("PelnaNazwa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("pelna_nazwa");

                    b.HasKey("KodModelu");

                    b.ToTable("model_kod");

                    b.HasData(
                        new
                        {
                            KodModelu = "SM-A525F",
                            Marka = "Samsung",
                            PelnaNazwa = "Samsung Galaxy A52"
                        },
                        new
                        {
                            KodModelu = "MI12PRO",
                            Marka = "Xiaomi",
                            PelnaNazwa = "Xiaomi 12 Pro"
                        },
                        new
                        {
                            KodModelu = "PIXEL7P",
                            Marka = "Google",
                            PelnaNazwa = "Google Pixel 7 Pro"
                        },
                        new
                        {
                            KodModelu = "REDMIN10",
                            Marka = "Xiaomi",
                            PelnaNazwa = "Redmi Note 10"
                        });
                });

            modelBuilder.Entity("SerwisTelefonow.DBModels.ServiceEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CenaKoncowa")
                        .HasColumnType("numeric")
                        .HasColumnName("cena_koncowa");

                    b.Property<decimal?>("CenaWstepna")
                        .HasColumnType("numeric")
                        .HasColumnName("cena_wstepna");

                    b.Property<string>("IMEI")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("imei");

                    b.Property<int>("KlientId")
                        .HasColumnType("integer")
                        .HasColumnName("klient_id");

                    b.Property<string>("KodModelu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("kod_modelu");

                    b.Property<string>("Opis")
                        .HasColumnType("text")
                        .HasColumnName("opis");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.HasIndex("KodModelu");

                    b.ToTable("wpis_serwisowy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CenaWstepna = 50m,
                            IMEI = "123456789012345",
                            KlientId = 1,
                            KodModelu = "PIXEL7P",
                            Opis = "Telefon się nie włącza, możliwe zalanie cieczą."
                        },
                        new
                        {
                            Id = 2,
                            CenaKoncowa = 600m,
                            CenaWstepna = 550m,
                            IMEI = "123456789012345",
                            KlientId = 1,
                            KodModelu = "MI12PRO",
                            Opis = "Rozbity ekran"
                        },
                        new
                        {
                            Id = 3,
                            CenaWstepna = 35m,
                            IMEI = "123461719012345",
                            KlientId = 2,
                            KodModelu = "REDMIN10",
                            Opis = "Telefon się nie włącza, oraz nie reaguje na podpięcie do ładowarki."
                        });
                });

            modelBuilder.Entity("SerwisTelefonow.DBModels.ServiceEntry", b =>
                {
                    b.HasOne("SerwisTelefonow.DBModels.Clients", "Client")
                        .WithMany("WpisySerwisowe")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SerwisTelefonow.DBModels.PhoneModel", "Model")
                        .WithMany("WpisySerwisowe")
                        .HasForeignKey("KodModelu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("SerwisTelefonow.DBModels.Clients", b =>
                {
                    b.Navigation("WpisySerwisowe");
                });

            modelBuilder.Entity("SerwisTelefonow.DBModels.PhoneModel", b =>
                {
                    b.Navigation("WpisySerwisowe");
                });
#pragma warning restore 612, 618
        }
    }
}
